name: Static Binaries

on:
  push:
  pull_request:
  schedule:
    - cron: "0 4 * * *"

jobs:
  linux:
    name: Build Linux
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1

      - name: Install packages
        run: sudo apt install -y php curl git build-essential

      - name: Install Composer
        uses: php-actions/composer@v6
        with:
          php_version: "8.2"
          version: 2
          command: about

      - name: Clone FrankenPHP
        run: git clone https://github.com/dunglas/frankenphp frankenphp

      - name: Build FrankenPHP
        run: |
          cd frankenphp
          CLEAN=1 PHP_VERSION=8.2 \
          PHP_EXTENSIONS=password-argon2,apcu,bcmath,bz2,ctype,curl,dba,dom,exif,fileinfo,filter,zlib,gd,iconv,igbinary,intl,openssl,mbstring,mbregex,mysqlnd,mysqli,opcache,pcntl,pdo,pdo_mysql,pgsql,pdo_pgsql,sqlite3,pdo_sqlite,phar,posix,readline,session,redis,simplexml,sockets,sysvsem,tokenizer,xml,zip \
          ./build-static.sh
          ls -la dist/*

      - uses: actions/upload-artifact@v3
        with:
          name: linux-binary
          path: frankenphp/dist/frankenphp-*

  darwin:
    name: Build Mac
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: 13.4

      - name: Install packages
        run: brew install libiconv bison re2c pkg-config bzip2 liblzf php@8.2 composer

      - name: Clone FrankenPHP
        run: git clone https://github.com/dunglas/frankenphp frankenphp

      - name: Build FrankenPHP
        run: |
          cd frankenphp
          CLEAN=1 PHP_VERSION=8.2 \
          PHP_EXTENSIONS=password-argon2,apcu,bcmath,bz2,ctype,curl,dba,dom,exif,fileinfo,filter,zlib,gd,iconv,igbinary,intl,openssl,mbstring,mbregex,mysqlnd,mysqli,opcache,pcntl,pdo,pdo_mysql,pgsql,pdo_pgsql,sqlite3,pdo_sqlite,phar,posix,readline,session,redis,simplexml,sockets,sysvsem,tokenizer,xml,zip \
          ./build-static.sh
          ls -la dist/*

      - uses: actions/upload-artifact@v3
        with:
          name: macos-binary
          path: frankenphp/dist/frankenphp-*

#  upload:
#    name: Upload release files
#    runs-on: ubuntu-20.04
#    needs: [
#      webextension,
#      darwin
#    ]
#    steps:
#      - uses: actions/checkout@v2
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: webextension
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: extension-safari
#
#      - name: Build Safari
#        run: |
#          ls -la
#
#      - name: Upload release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/v')
#        with:
#          files: |
#            TYPO3-TDK-GitPod-*
